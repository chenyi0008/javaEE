/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2023-11-17 07:50:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.chen.domain.Course;
import java.util.List;
import java.util.ArrayList;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.context.ApplicationContext;
import com.chen.dao.CourseDao;
import org.springframework.web.context.support.AnnotationConfigWebApplicationContext;
import com.chen.config.SpringConfig;
import com.chen.config.ApplicationContextProvider;
import java.text.SimpleDateFormat;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    ApplicationContext context = ApplicationContextProvider.getContext();
    // Get the CourseDao bean
    CourseDao courseDao = (CourseDao) context.getBean(CourseDao.class);
    // Call the dao method to get the course list
    List<Course> courseList = courseDao.getAll();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>修改课程</h2>\r\n");
      out.write("<form action=\"/course/update\" method=\"post\" enctype=\"application/x-www-form-urlencoded\">\r\n");
      out.write("    <label for=\"course\">选择课程:</label>\r\n");
      out.write("    <select id=\"course\" name=\"course\" onchange=\"showCourseDetails()\">\r\n");
      out.write("        ");
 for (Course course : courseList) { 
      out.write("\r\n");
      out.write("            <option value=\"");
      out.print( course.getId() );
      out.write('"');
      out.write('>');
      out.print( course.getName() );
      out.write("</option>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </select>\r\n");
      out.write("    <br>\r\n");
      out.write("    <label for=\"name\">课程名称:</label>\r\n");
      out.write("    <input type=\"text\" id=\"name\" name=\"name\">\r\n");
      out.write("    <br>\r\n");
      out.write("    <label for=\"description\">课程描述:</label>\r\n");
      out.write("    <textarea id=\"description\" name=\"description\"></textarea>\r\n");
      out.write("    <br>\r\n");
      out.write("    <label for=\"time\">课程时间:</label>\r\n");
      out.write("    <input type=\"text\" id=\"time\" name=\"time\">\r\n");
      out.write("    <br>\r\n");
      out.write("    <input type=\"submit\" value=\"保存\">\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    function showCourseDetails() {\r\n");
      out.write("        var courseId = document.getElementById(\"course\").value;\r\n");
      out.write("        var xhr = new XMLHttpRequest();\r\n");
      out.write("        xhr.onreadystatechange = function() {\r\n");
      out.write("            if (xhr.readyState === 4 && xhr.status === 200) {\r\n");
      out.write("                var course = JSON.parse(xhr.responseText);\r\n");
      out.write("                document.getElementById(\"name\").value = course.name;\r\n");
      out.write("                document.getElementById(\"name\").value = course.name;\r\n");
      out.write("                document.getElementById(\"description\").value = course.description;\r\n");
      out.write("                document.getElementById(\"time\").value = course.time;\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("        xhr.open(\"GET\", \"/course/\" + courseId, true);\r\n");
      out.write("        xhr.send();\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
